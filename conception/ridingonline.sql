BEGIN;

DROP TABLE IF EXISTS "tag",
"tag_has_post",
"post",
"comment",
"user";

DROP SEQUENCE IF EXISTS
"comment_id_seq",
"post_id_seq",
"tag_has_post_id_seq",
"tag_id_seq",
"user_id_seq";

CREATE TABLE "user" (
  "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "firstname" text NULL,
  "lastname" text NULL,
  "email" text NOT NULL,
  "password" text NOT NULL,
  "role" text NOT NULL DEFAULT 'user',
  "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" timestamptz
);


CREATE TABLE "tag" (
  "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" text NOT NULL,
  "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" timestamptz
);

CREATE TABLE "post" (
  "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "title" text NOT NULL,
  "content" text NULL,
  "slug" text NOT NULL,
  "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" timestamptz
);

CREATE TABLE "img" (
  "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "img_path" text NULL,
  "img_name" text NULL,
  "post_id" integer NOT NULL REFERENCES "post"("id"), 
  "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" timestamptz
);

CREATE TABLE "tag_has_post" (
  "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "tag_id" integer NOT NULL REFERENCES "tag"("id"),
  "post_id" integer NOT NULL REFERENCES "post"("id"),
  "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" timestamptz,
  UNIQUE ("tag_id", "post_id")
);

CREATE TABLE "comment" (
  "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "title" text NOT NULL,
  "content" text NOT NULL,
  "note" text NULL,
  "user_id" integer NOT NULL REFERENCES "user"("id"), 
  "post_id" integer NOT NULL REFERENCES "post"("id") ON DELETE CASCADE,
  "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" timestamptz
);

COMMIT;